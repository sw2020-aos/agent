package com.aos.tray.agent;

import org.springframework.stereotype.Repository;

import com.pi4j.io.gpio.GpioController;
import com.pi4j.io.gpio.GpioFactory;
import com.pi4j.io.gpio.GpioPinDigitalOutput;
import com.pi4j.io.gpio.PinState;
import com.pi4j.io.gpio.RaspiPin;

import okhttp3.FormBody;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

@Repository
public class TrayRepositoryImpl implements TrayRepository {
	public static final MediaType MEDIA_TYPE_HTML = MediaType.get("tex/html; charset=utf-8");

	@Override
	public int getWeight(int trayNo) {
		// 무게 센서로 부터 무게 정보를 조회한다.
		// pi4j 라이브러를 이용한 라즈베리파이 제어를 하는 코드가 들어가면 됩니다.
		return 0;
	}

	@Override
	public String postWeight(int trayNo, double weight) throws Exception {
		String url = "http://127.0.0.1:80/incomeOrderWeight";
		String msg = "";

//		RequestBody body = RequestBody.create(msg, MEDIA_TYPE_HTML);
		
		RequestBody body = new FormBody.Builder()
				.add("trayNo", trayNo + "")
				.add("weight", weight + "")
				.build();

		Request request = new Request.Builder().url(url).post(body).build();
		try (Response response = new OkHttpClient()
				.newCall(request)
				.execute()) {
			return response.body().string();
		}
	}

	@Override
	public void setLight(int trayNo, boolean status) {
		// pi4j 라이브러를 이용한 라즈베리파이 제어를 하는 코드가 들어가면 됩니다.
		// LED 센서를 온, 오프한다.
		GpioController gpio = GpioFactory.getInstance();
		GpioPinDigitalOutput pin = gpio.provisionDigitalOutputPin(RaspiPin.GPIO_02, "ALERT LED", PinState.HIGH);

		pin.setShutdownOptions(true, PinState.LOW);

		gpio.shutdown();
		gpio.unprovisionPin(pin);
	}
}
