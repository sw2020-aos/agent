package com.aos.tray.agent;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

@Service
public class TrayServiceImple implements TrayService {
	@Value("${tray.no}")
	private int trayNo;

	@Autowired
	private TrayRepository tryRepository;

	@Override
	@Scheduled(fixedDelay = 1000) // 10분 단위 호출
	public void isOrder() throws Exception {
		/*
		 * SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS"); Date
		 * now = new Date(); String strDate = sdf.format(now);
		 * System.out.println("Java cron job expression:: " + strDate);
		 */
//		int weight = this.tryRepository.getWeight(this.trayNo);

		double weight = 20.000;
		
		String response = this.tryRepository.postWeight(this.trayNo, weight);

		Message message = toObject(response, Message.class);
		
		System.out.println("status : " + message.isStatus());
		System.out.println("code : " + message.getCode());
		System.out.println("message : " + message.getMessage());
		
//		if (message.isStatus()) {
//			this.tryRepository.setLight(this.trayNo, true);
//		} else {
//			this.tryRepository.setLight(this.trayNo, false);
//		}
	}

	private String toJSON(Map<String, Object> object) {
		return new GsonBuilder().setPrettyPrinting().serializeNulls().create().toJson(object);
	}

	private <T> T toObject(String message, Class<T> resultType) {
		return (T) new Gson().fromJson(message, resultType);
	}
}
